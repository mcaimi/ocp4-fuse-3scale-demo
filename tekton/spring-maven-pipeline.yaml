apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: spring-maven-pipeline
spec:
  workspaces:
  - name: spring-maven-repo
  resources:
  - name: fuse-demo-github
    type: git
  - name: output-runnable-image
    type: image
  params:
    - name: artifact_id
      type: string
      description: The ajava artifact id that is put on nexus after a successful build
      default: "com.redhat:fuse-demo:1.0.0-SNAPSHOT"
    - name: nexus_url
      type: string
      description: URL of the Nexus Server
      default: "nexus.apps.kubernetes.local"
    - name: credentials
      type: string
      description: Credentials to use when authenticating on Nexus
      default: "jenkins-nexus:redhat123"
    - name: deploymentNamespace
      type: string
      description: Namespace where deployment will occur
      default: "fuse-demo"
    - name: dockerfilePath
      type: string
      description: Path containing the Dockerfile for the final image
      default: "java-runner"
  tasks:
  - name: build
    taskRef:
      name: spring-maven-task
    resources:
      inputs:
      - name: source
        resource: fuse-demo-github
    params:
    - name: GOALS
      value: ["-DskipTests=true", "compile"]
    workspaces:
    - name: maven-repo
      workspace: spring-maven-repo

  - name: verify
    taskRef:
      name: spring-maven-task
    runAfter: ["build"]
    resources:
      inputs:
      - name: source
        resource: fuse-demo-github
    params:
    - name: GOALS
      value: ["-Dspring.profiles.active=test","verify"]
    workspaces:
    - name: maven-repo
      workspace: spring-maven-repo

  - name: jacoco
    taskRef:
      name: spring-maven-task
    runAfter: ["verify"]
    resources:
      inputs:
      - name: source
        resource: fuse-demo-github
    params:
    - name: GOALS
      value: ["jacoco:report"]
    workspaces:
    - name: maven-repo
      workspace: spring-maven-repo

  - name: package
    taskRef:
      name: spring-maven-task
    runAfter: ["verify"]
    resources:
      inputs:
      - name: source
        resource: fuse-demo-github
    params:
    - name: GOALS
      value: ["-DskipTests=true", "package"]
    workspaces:
    - name: maven-repo
      workspace: spring-maven-repo

  - name: upload-artifact
    taskRef:
      name: spring-nexus-task
    runAfter: ["package", "jacoco"]
    resources:
      inputs:
      - name: source
        resource: fuse-demo-github
    params:
    - name: GOALS
      value: ["deploy"]
    - name: SETTINGS_PATH
      value: "conf/settings.xml"
    workspaces:
    - name: maven-repo
      workspace: spring-maven-repo

  - name: dockerfile-linting
    taskRef:
      name: hadolint-task
    runAfter: ["upload-artifact"]
    resources:
      inputs:
      - name: source
        resource: fuse-demo-github
    params:
    - name: dockerfilePath
      value: "java-runner"
    workspaces:
    - name: maven-repo
      workspace: spring-maven-repo

  - name: build-runnable-image
    taskRef:
      name: spring-build-task
    runAfter: ["upload-artifact"]
    params:
      - name: artifact_id
        value: "$(params.artifact_id)"
      - name: nexus_url
        value: "$(params.nexus_url)"
      - name: credentials
        value: "$(params.credentials)"
      - name: TLS_VERIFY
        value: "false"
      - name: dockerfilePath
        value: "java-runner"
    resources:
      inputs:
      - name: source
        resource: fuse-demo-github
      outputs:
      - name: image
        resource: output-runnable-image
    workspaces:
    - name: maven-repo
      workspace: spring-maven-repo

  - name: deploy-app
    taskRef:
      name: kustomize-deployment-task
    runAfter: ["build-runnable-image"]
    params:
      - name: templatePath
        value: "fuse-demo"
      - name: deploymentNamespace
        value: "$(params.deploymentNamespace)"
    resources:
      inputs:
        - name: source
          resource: fuse-demo-github
    workspaces:
      - name: maven-repo
        workspace: spring-maven-repo

  - name: deploy-database
    taskRef:
      name: kustomize-deployment-task
    runAfter: ["build-runnable-image"]
    conditions:
      - conditionRef: "postgres-already-deployed"
        params:
          - name: postgresLabel
            value: "app=spring-postgres-app"
    params:
      - name: templatePath
        value: "fuse-postgres"
      - name: deploymentNamespace
        value: "$(params.deploymentNamespace)"
    resources:
      inputs:
        - name: source
          resource: fuse-demo-github
    workspaces:
      - name: maven-repo
        workspace: spring-maven-repo

